import{S as us,i as cs,s as fs,e as p,t as o,j as u,c as i,a as r,g as l,d as e,l as c,b as f,X as zt,f as s,M as a,H as sn}from"../../chunks/vendor-66fc1351.js";function hs(ns){let v,Ae,Jt,Y,ze,Mt,P,on,Nt,Z,Je,Ot,b,ln,qt,w,pn,Ht,V,Me,Rt,$,Ne,Wt,h,Oe,S,qe,He,C,Re,We,j,Be,De,gt,Xe,Ge,Bt,tt,Le,Dt,d,Ue,_t,Ke,Fe,Et,Qe,Ye,It,Ze,Ve,Xt,y,$e,xt,ta,ea,Gt,T,aa,A,na,Lt,et,sa,Ut,at,oa,Kt,nt,la,Ft,g,pa,z,ia,ra,Qt,J,ua,M,ca,Yt,st,fa,Zt,ot,ha,Vt,m,da,Pt,ma,ka,St,va,ba,$t,N,ss=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>outerContainer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>green<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>blue<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code>`,te,lt,wa,ee,O,ya,q,ga,ae,pt,_a,ne,it,Ea,se,H,os=`<code class="language-css"><span class="token selector">#bar_inner</span> <span class="token punctuation">&#123;</span>
  // center the text
  <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>

  // position bar
  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
  <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
  <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`,oe,rt,Ia,le,R,rn,pe,_,xa,Ct,Pa,Sa,ie,E,Ca,jt,ja,Ta,re,W,Aa,B,za,ue,ut,Ja,ce,ct,Ma,fe,I,Na,Tt,Oa,qa,he,D,ls=`<code class="language-javascript"><span class="token comment">// in dragEnd(e)</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>currentX <span class="token operator">&lt;</span> dragWidth<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token function">setTranslate</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> dragItem<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
  <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'Confirmed!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`,de,X,Ha,G,Ra,me,ft,Wa,ke,ht,Ba,ve,dt,L,Da,At,Xa,Ga,be,mt,U,La,we,K,un,ye,kt,Ua,ge,vt,Ka,_e,F,Fa,Q,Qa,Ee,bt,Ya,Ie,wt,Za;return{c(){v=p("h3"),Ae=o("Intro"),Jt=u(),Y=p("p"),ze=o("In this post I build a Slide-to-Confirm component."),Mt=u(),P=p("img"),Nt=u(),Z=p("p"),Je=o("Designers can use Slide-to-Confirm as a tool to help their users feel more secure (than a button that can be accidentally tapped) and more accomplished (takes more work to slide across the screen). Amazon uses it in their \u201CBuy Now\u201D flow to prevent accidental purchases."),Ot=u(),b=p("img"),qt=u(),w=p("img"),Ht=u(),V=p("p"),Me=o("The UX of this component is great! Showing green and changing the message as you swipe brings out the security and accomplishment feelings. Unfortunately, it\u2019s also highly custom."),Rt=u(),$=p("h3"),Ne=o("Looking for similar\u2019s online"),Wt=u(),h=p("p"),Oe=o("The only similar Javascript-based components I could find online were this "),S=p("a"),qe=o("codepen"),He=o(", this "),C=p("a"),Re=o("blog"),We=o(", and this "),j=p("a"),Be=o("React Native library"),De=o("; none of which really come close to the functionality I\u2019m looking for. Android and iOS devs had something closer but I\u2019m looking for a Javascript and CSS solution. They all use the "),gt=p("code"),Xe=o("<input type='range'"),Ge=o(" element, so let\u2019s start with that."),Bt=u(),tt=p("h3"),Le=o("Browser support for Thumb Range"),Dt=u(),d=p("p"),Ue=o("Using the blog to help kickstart my progress, I made a codepen and quickly figured out some interesting things. The blog only supports Firefox when applying CSS to the "),_t=p("code"),Ke=o("<input type='range'"),Fe=o(" element using "),Et=p("code"),Qe=o("input::-moz-range-thumb"),Ye=o(". I needed to include "),It=p("code"),Ze=o("input::-webkit-slider-thumb"),Ve=o(" for support on Safari and Chrome, the platforms I\u2019m developing for."),Xt=u(),y=p("p"),$e=o("Also strange is that Chrome required a "),xt=p("code"),ta=o("margin-bottom: -7px"),ea=o(" in order to center the slider vertically."),Gt=u(),T=p("p"),aa=o(`Progress on the component here:
`),A=p("a"),na=o("https://codepen.io/arjunkalburgi/pen/dyyJMKO"),Lt=u(),et=p("h3"),sa=o("A new idea"),Ut=u(),at=p("p"),oa=o("Turning my attention to how I\u2019ll solve changing the track message and colour as you swipe got me looking at something new: draggable components."),Kt=u(),nt=p("p"),la=o("What if I was able to use some drag-and-drop JavaScript to make my slider?"),Ft=u(),g=p("p"),pa=o("Staring with "),z=p("a"),ia=o("this drag tutorial from Kirupa"),ra=o(", I first modified it to only drag horizontally and then to not drag over the container width."),Qt=u(),J=p("p"),ua=o(`Progress here:
`),M=p("a"),ca=o("https://codepen.io/arjunkalburgi/pen/GRRyjzZ"),Yt=u(),st=p("h3"),fa=o("Is the new idea feasable?"),Zt=u(),ot=p("p"),ha=o("If the new idea could actually work, then I\u2019ll be able to put elements on both sides of the slide item that will show and hide as I move the slide item."),Vt=u(),m=p("p"),da=o("I was able to create this functionality with blue and green bars. The most difficult part about this was honestly figuring out the logic of the HTML elements. I decided that having two tracks on top of each other with "),Pt=p("code"),ma=o("position: absolute"),ka=o(" and a high "),St=p("code"),va=o("z-index"),ba=o(" for the item worked best:"),$t=u(),N=p("pre"),te=u(),lt=p("p"),wa=o("The bars move by changing their width in JS along with the drag of the item."),ee=u(),O=p("p"),ya=o(`Progress here:
`),q=p("a"),ga=o("https://codepen.io/arjunkalburgi/pen/rNNpWdX"),ae=u(),pt=p("h3"),_a=o("Text in the Bars"),ne=u(),it=p("p"),Ea=o("Now to have text within the bars so that sliding reveals/conseals the text. I quickly made an inner div with the text and made it fit to the grandparent:"),se=u(),H=p("pre"),oe=u(),rt=p("p"),Ia=o("However this made both text\u2019s appear on top of each other."),le=u(),R=p("img"),pe=u(),_=p("p"),xa=o("And adding "),Ct=p("code"),Pa=o("overflow: hidden"),Sa=o(" to the parent bar\u2019s does nothing (because the parent is not absolute as well). I\u2019m actually really stuck here\u2026 \u{1F914}"),ie=u(),E=p("p"),Ca=o("In the end I went with not the most elegant solution, but I think with a CSS transition it can be okay. I used JS to switch the "),jt=p("code"),ja=o("z-index"),Ta=o(" of the bars, so that the text essentially switches places and is covered by the other bar."),re=u(),W=p("p"),Aa=o(`See it here:
`),B=p("a"),za=o("https://codepen.io/arjunkalburgi/pen/poopRzX"),ue=u(),ut=p("h3"),Ja=o("Confirm alert, and fallback"),ce=u(),ct=p("p"),Ma=o("Now that I have my meat set up, I need to add the potatoes. I need to trigger an event once the slider reaches the end and if the slider doesn\u2019t reach the end, it should fallback to the beginning."),fe=u(),I=p("p"),Na=o("Both potatoes were pretty easy, just needed to have some logic in the "),Tt=p("code"),Oa=o("dragEnd"),qa=o(" function"),he=u(),D=p("pre"),de=u(),X=p("p"),Ha=o(`I\u2019ve added an animation on fallback and wrapped the alert in a function for the CodePen:
`),G=p("a"),Ra=o("https://codepen.io/arjunkalburgi/pen/BaaJYbx"),me=u(),ft=p("h3"),Wa=o("Finalizing"),ke=u(),ht=p("p"),Ba=o("To finish it off, I cleaned up my code using BEM CSS, and removed some of the unnecessary things like the coloured bars(*) and styled the dragItem."),ve=u(),dt=p("blockquote"),L=p("p"),Da=o("(*) Since the "),At=p("code"),Xa=o("overflow: hidden"),Ga=o(" didn\u2019t work, it\u2019s better to go with an opacity change for the text and changing the background colour of the bar instead of keeping two different ones."),be=u(),mt=p("p"),U=p("a"),La=o("https://codepen.io/arjunkalburgi/pen/QWWamxW"),we=u(),K=p("img"),ye=u(),kt=p("h3"),Ua=o("Converting to Angular"),ge=u(),vt=p("p"),Ka=o("Now that I have the component in JS, I need it in Angular. This was simple enough overall, but had an annoying time making it work due to some scope bugs. After taking the weekend off and then running the code locally, I was able to figure them all out and have it all working."),_e=u(),F=p("p"),Fa=o(`I put the final version in CodePen here:
`),Q=p("a"),Qa=o("https://codepen.io/arjunkalburgi/pen/xxxpzPx"),Ee=u(),bt=p("p"),Ya=o("I\u2019d like to go a step further and create a github repo and NPM library for this component, but maybe that\u2019ll be for another day!"),Ie=u(),wt=p("p"),Za=o("Thanks for reading!"),this.h()},l(t){v=i(t,"H3",{});var n=r(v);Ae=l(n,"Intro"),n.forEach(e),Jt=c(t),Y=i(t,"P",{});var cn=r(Y);ze=l(cn,"In this post I build a Slide-to-Confirm component."),cn.forEach(e),Mt=c(t),P=i(t,"IMG",{alt:!0,src:!0}),Nt=c(t),Z=i(t,"P",{});var fn=r(Z);Je=l(fn,"Designers can use Slide-to-Confirm as a tool to help their users feel more secure (than a button that can be accidentally tapped) and more accomplished (takes more work to slide across the screen). Amazon uses it in their \u201CBuy Now\u201D flow to prevent accidental purchases."),fn.forEach(e),Ot=c(t),b=i(t,"IMG",{alt:!0,src:!0,width:!0}),qt=c(t),w=i(t,"IMG",{alt:!0,src:!0,width:!0}),Ht=c(t),V=i(t,"P",{});var hn=r(V);Me=l(hn,"The UX of this component is great! Showing green and changing the message as you swipe brings out the security and accomplishment feelings. Unfortunately, it\u2019s also highly custom."),hn.forEach(e),Rt=c(t),$=i(t,"H3",{});var dn=r($);Ne=l(dn,"Looking for similar\u2019s online"),dn.forEach(e),Wt=c(t),h=i(t,"P",{});var k=r(h);Oe=l(k,"The only similar Javascript-based components I could find online were this "),S=i(k,"A",{href:!0,rel:!0});var mn=r(S);qe=l(mn,"codepen"),mn.forEach(e),He=l(k,", this "),C=i(k,"A",{href:!0,rel:!0});var kn=r(C);Re=l(kn,"blog"),kn.forEach(e),We=l(k,", and this "),j=i(k,"A",{href:!0,rel:!0});var vn=r(j);Be=l(vn,"React Native library"),vn.forEach(e),De=l(k,"; none of which really come close to the functionality I\u2019m looking for. Android and iOS devs had something closer but I\u2019m looking for a Javascript and CSS solution. They all use the "),gt=i(k,"CODE",{});var bn=r(gt);Xe=l(bn,"<input type='range'"),bn.forEach(e),Ge=l(k," element, so let\u2019s start with that."),k.forEach(e),Bt=c(t),tt=i(t,"H3",{});var wn=r(tt);Le=l(wn,"Browser support for Thumb Range"),wn.forEach(e),Dt=c(t),d=i(t,"P",{});var x=r(d);Ue=l(x,"Using the blog to help kickstart my progress, I made a codepen and quickly figured out some interesting things. The blog only supports Firefox when applying CSS to the "),_t=i(x,"CODE",{});var yn=r(_t);Ke=l(yn,"<input type='range'"),yn.forEach(e),Fe=l(x," element using "),Et=i(x,"CODE",{});var gn=r(Et);Qe=l(gn,"input::-moz-range-thumb"),gn.forEach(e),Ye=l(x,". I needed to include "),It=i(x,"CODE",{});var _n=r(It);Ze=l(_n,"input::-webkit-slider-thumb"),_n.forEach(e),Ve=l(x," for support on Safari and Chrome, the platforms I\u2019m developing for."),x.forEach(e),Xt=c(t),y=i(t,"P",{});var xe=r(y);$e=l(xe,"Also strange is that Chrome required a "),xt=i(xe,"CODE",{});var En=r(xt);ta=l(En,"margin-bottom: -7px"),En.forEach(e),ea=l(xe," in order to center the slider vertically."),xe.forEach(e),Gt=c(t),T=i(t,"P",{});var Va=r(T);aa=l(Va,`Progress on the component here:
`),A=i(Va,"A",{href:!0,rel:!0});var In=r(A);na=l(In,"https://codepen.io/arjunkalburgi/pen/dyyJMKO"),In.forEach(e),Va.forEach(e),Lt=c(t),et=i(t,"H3",{});var xn=r(et);sa=l(xn,"A new idea"),xn.forEach(e),Ut=c(t),at=i(t,"P",{});var Pn=r(at);oa=l(Pn,"Turning my attention to how I\u2019ll solve changing the track message and colour as you swipe got me looking at something new: draggable components."),Pn.forEach(e),Kt=c(t),nt=i(t,"P",{});var Sn=r(nt);la=l(Sn,"What if I was able to use some drag-and-drop JavaScript to make my slider?"),Sn.forEach(e),Ft=c(t),g=i(t,"P",{});var Pe=r(g);pa=l(Pe,"Staring with "),z=i(Pe,"A",{href:!0,rel:!0});var Cn=r(z);ia=l(Cn,"this drag tutorial from Kirupa"),Cn.forEach(e),ra=l(Pe,", I first modified it to only drag horizontally and then to not drag over the container width."),Pe.forEach(e),Qt=c(t),J=i(t,"P",{});var $a=r(J);ua=l($a,`Progress here:
`),M=i($a,"A",{href:!0,rel:!0});var jn=r(M);ca=l(jn,"https://codepen.io/arjunkalburgi/pen/GRRyjzZ"),jn.forEach(e),$a.forEach(e),Yt=c(t),st=i(t,"H3",{});var Tn=r(st);fa=l(Tn,"Is the new idea feasable?"),Tn.forEach(e),Zt=c(t),ot=i(t,"P",{});var An=r(ot);ha=l(An,"If the new idea could actually work, then I\u2019ll be able to put elements on both sides of the slide item that will show and hide as I move the slide item."),An.forEach(e),Vt=c(t),m=i(t,"P",{});var yt=r(m);da=l(yt,"I was able to create this functionality with blue and green bars. The most difficult part about this was honestly figuring out the logic of the HTML elements. I decided that having two tracks on top of each other with "),Pt=i(yt,"CODE",{});var zn=r(Pt);ma=l(zn,"position: absolute"),zn.forEach(e),ka=l(yt," and a high "),St=i(yt,"CODE",{});var Jn=r(St);va=l(Jn,"z-index"),Jn.forEach(e),ba=l(yt," for the item worked best:"),yt.forEach(e),$t=c(t),N=i(t,"PRE",{class:!0});var ps=r(N);ps.forEach(e),te=c(t),lt=i(t,"P",{});var Mn=r(lt);wa=l(Mn,"The bars move by changing their width in JS along with the drag of the item."),Mn.forEach(e),ee=c(t),O=i(t,"P",{});var tn=r(O);ya=l(tn,`Progress here:
`),q=i(tn,"A",{href:!0,rel:!0});var Nn=r(q);ga=l(Nn,"https://codepen.io/arjunkalburgi/pen/rNNpWdX"),Nn.forEach(e),tn.forEach(e),ae=c(t),pt=i(t,"H3",{});var On=r(pt);_a=l(On,"Text in the Bars"),On.forEach(e),ne=c(t),it=i(t,"P",{});var qn=r(it);Ea=l(qn,"Now to have text within the bars so that sliding reveals/conseals the text. I quickly made an inner div with the text and made it fit to the grandparent:"),qn.forEach(e),se=c(t),H=i(t,"PRE",{class:!0});var is=r(H);is.forEach(e),oe=c(t),rt=i(t,"P",{});var Hn=r(rt);Ia=l(Hn,"However this made both text\u2019s appear on top of each other."),Hn.forEach(e),le=c(t),R=i(t,"IMG",{alt:!0,src:!0}),pe=c(t),_=i(t,"P",{});var Se=r(_);xa=l(Se,"And adding "),Ct=i(Se,"CODE",{});var Rn=r(Ct);Pa=l(Rn,"overflow: hidden"),Rn.forEach(e),Sa=l(Se," to the parent bar\u2019s does nothing (because the parent is not absolute as well). I\u2019m actually really stuck here\u2026 \u{1F914}"),Se.forEach(e),ie=c(t),E=i(t,"P",{});var Ce=r(E);Ca=l(Ce,"In the end I went with not the most elegant solution, but I think with a CSS transition it can be okay. I used JS to switch the "),jt=i(Ce,"CODE",{});var Wn=r(jt);ja=l(Wn,"z-index"),Wn.forEach(e),Ta=l(Ce," of the bars, so that the text essentially switches places and is covered by the other bar."),Ce.forEach(e),re=c(t),W=i(t,"P",{});var en=r(W);Aa=l(en,`See it here:
`),B=i(en,"A",{href:!0,rel:!0});var Bn=r(B);za=l(Bn,"https://codepen.io/arjunkalburgi/pen/poopRzX"),Bn.forEach(e),en.forEach(e),ue=c(t),ut=i(t,"H3",{});var Dn=r(ut);Ja=l(Dn,"Confirm alert, and fallback"),Dn.forEach(e),ce=c(t),ct=i(t,"P",{});var Xn=r(ct);Ma=l(Xn,"Now that I have my meat set up, I need to add the potatoes. I need to trigger an event once the slider reaches the end and if the slider doesn\u2019t reach the end, it should fallback to the beginning."),Xn.forEach(e),fe=c(t),I=i(t,"P",{});var je=r(I);Na=l(je,"Both potatoes were pretty easy, just needed to have some logic in the "),Tt=i(je,"CODE",{});var Gn=r(Tt);Oa=l(Gn,"dragEnd"),Gn.forEach(e),qa=l(je," function"),je.forEach(e),he=c(t),D=i(t,"PRE",{class:!0});var rs=r(D);rs.forEach(e),de=c(t),X=i(t,"P",{});var an=r(X);Ha=l(an,`I\u2019ve added an animation on fallback and wrapped the alert in a function for the CodePen:
`),G=i(an,"A",{href:!0,rel:!0});var Ln=r(G);Ra=l(Ln,"https://codepen.io/arjunkalburgi/pen/BaaJYbx"),Ln.forEach(e),an.forEach(e),me=c(t),ft=i(t,"H3",{});var Un=r(ft);Wa=l(Un,"Finalizing"),Un.forEach(e),ke=c(t),ht=i(t,"P",{});var Kn=r(ht);Ba=l(Kn,"To finish it off, I cleaned up my code using BEM CSS, and removed some of the unnecessary things like the coloured bars(*) and styled the dragItem."),Kn.forEach(e),ve=c(t),dt=i(t,"BLOCKQUOTE",{});var Fn=r(dt);L=i(Fn,"P",{});var Te=r(L);Da=l(Te,"(*) Since the "),At=i(Te,"CODE",{});var Qn=r(At);Xa=l(Qn,"overflow: hidden"),Qn.forEach(e),Ga=l(Te," didn\u2019t work, it\u2019s better to go with an opacity change for the text and changing the background colour of the bar instead of keeping two different ones."),Te.forEach(e),Fn.forEach(e),be=c(t),mt=i(t,"P",{});var Yn=r(mt);U=i(Yn,"A",{href:!0,rel:!0});var Zn=r(U);La=l(Zn,"https://codepen.io/arjunkalburgi/pen/QWWamxW"),Zn.forEach(e),Yn.forEach(e),we=c(t),K=i(t,"IMG",{alt:!0,src:!0}),ye=c(t),kt=i(t,"H3",{});var Vn=r(kt);Ua=l(Vn,"Converting to Angular"),Vn.forEach(e),ge=c(t),vt=i(t,"P",{});var $n=r(vt);Ka=l($n,"Now that I have the component in JS, I need it in Angular. This was simple enough overall, but had an annoying time making it work due to some scope bugs. After taking the weekend off and then running the code locally, I was able to figure them all out and have it all working."),$n.forEach(e),_e=c(t),F=i(t,"P",{});var nn=r(F);Fa=l(nn,`I put the final version in CodePen here:
`),Q=i(nn,"A",{href:!0,rel:!0});var ts=r(Q);Qa=l(ts,"https://codepen.io/arjunkalburgi/pen/xxxpzPx"),ts.forEach(e),nn.forEach(e),Ee=c(t),bt=i(t,"P",{});var es=r(bt);Ya=l(es,"I\u2019d like to go a step further and create a github repo and NPM library for this component, but maybe that\u2019ll be for another day!"),es.forEach(e),Ie=c(t),wt=i(t,"P",{});var as=r(wt);Za=l(as,"Thanks for reading!"),as.forEach(e),this.h()},h(){f(P,"alt",""),zt(P.src,on="/post-images/2019-11-05_swipe-to-confirm/final.gif")||f(P,"src",on),f(b,"alt",""),zt(b.src,ln="/post-images/2019-11-05_swipe-to-confirm/amazon2.png")||f(b,"src",ln),f(b,"width","30%"),f(w,"alt",""),zt(w.src,pn="/post-images/2019-11-05_swipe-to-confirm/amazon3.jpeg")||f(w,"src",pn),f(w,"width","30%"),f(S,"href","https://codepen.io/bennettfeely/pen/jyGeJ"),f(S,"rel","nofollow"),f(C,"href","https://www.davidbcalhoun.com/2011/implementing-iphones-slider-unlock-with-input-typerange/"),f(C,"rel","nofollow"),f(j,"href","https://github.com/agentS/react-native-slider-button"),f(j,"rel","nofollow"),f(A,"href","https://codepen.io/arjunkalburgi/pen/dyyJMKO"),f(A,"rel","nofollow"),f(z,"href","https://www.kirupa.com/html5/drag.htm"),f(z,"rel","nofollow"),f(M,"href","https://codepen.io/arjunkalburgi/pen/GRRyjzZ"),f(M,"rel","nofollow"),f(N,"class","language-html"),f(q,"href","https://codepen.io/arjunkalburgi/pen/rNNpWdX"),f(q,"rel","nofollow"),f(H,"class","language-css"),f(R,"alt",""),zt(R.src,rn="/post-images/2019-11-05_swipe-to-confirm/brokentext.png")||f(R,"src",rn),f(B,"href","https://codepen.io/arjunkalburgi/pen/poopRzX"),f(B,"rel","nofollow"),f(D,"class","language-javascript"),f(G,"href","https://codepen.io/arjunkalburgi/pen/BaaJYbx"),f(G,"rel","nofollow"),f(U,"href","https://codepen.io/arjunkalburgi/pen/QWWamxW"),f(U,"rel","nofollow"),f(K,"alt",""),zt(K.src,un="/post-images/2019-11-05_swipe-to-confirm/final.gif")||f(K,"src",un),f(Q,"href","https://codepen.io/arjunkalburgi/pen/xxxpzPx"),f(Q,"rel","nofollow")},m(t,n){s(t,v,n),a(v,Ae),s(t,Jt,n),s(t,Y,n),a(Y,ze),s(t,Mt,n),s(t,P,n),s(t,Nt,n),s(t,Z,n),a(Z,Je),s(t,Ot,n),s(t,b,n),s(t,qt,n),s(t,w,n),s(t,Ht,n),s(t,V,n),a(V,Me),s(t,Rt,n),s(t,$,n),a($,Ne),s(t,Wt,n),s(t,h,n),a(h,Oe),a(h,S),a(S,qe),a(h,He),a(h,C),a(C,Re),a(h,We),a(h,j),a(j,Be),a(h,De),a(h,gt),a(gt,Xe),a(h,Ge),s(t,Bt,n),s(t,tt,n),a(tt,Le),s(t,Dt,n),s(t,d,n),a(d,Ue),a(d,_t),a(_t,Ke),a(d,Fe),a(d,Et),a(Et,Qe),a(d,Ye),a(d,It),a(It,Ze),a(d,Ve),s(t,Xt,n),s(t,y,n),a(y,$e),a(y,xt),a(xt,ta),a(y,ea),s(t,Gt,n),s(t,T,n),a(T,aa),a(T,A),a(A,na),s(t,Lt,n),s(t,et,n),a(et,sa),s(t,Ut,n),s(t,at,n),a(at,oa),s(t,Kt,n),s(t,nt,n),a(nt,la),s(t,Ft,n),s(t,g,n),a(g,pa),a(g,z),a(z,ia),a(g,ra),s(t,Qt,n),s(t,J,n),a(J,ua),a(J,M),a(M,ca),s(t,Yt,n),s(t,st,n),a(st,fa),s(t,Zt,n),s(t,ot,n),a(ot,ha),s(t,Vt,n),s(t,m,n),a(m,da),a(m,Pt),a(Pt,ma),a(m,ka),a(m,St),a(St,va),a(m,ba),s(t,$t,n),s(t,N,n),N.innerHTML=ss,s(t,te,n),s(t,lt,n),a(lt,wa),s(t,ee,n),s(t,O,n),a(O,ya),a(O,q),a(q,ga),s(t,ae,n),s(t,pt,n),a(pt,_a),s(t,ne,n),s(t,it,n),a(it,Ea),s(t,se,n),s(t,H,n),H.innerHTML=os,s(t,oe,n),s(t,rt,n),a(rt,Ia),s(t,le,n),s(t,R,n),s(t,pe,n),s(t,_,n),a(_,xa),a(_,Ct),a(Ct,Pa),a(_,Sa),s(t,ie,n),s(t,E,n),a(E,Ca),a(E,jt),a(jt,ja),a(E,Ta),s(t,re,n),s(t,W,n),a(W,Aa),a(W,B),a(B,za),s(t,ue,n),s(t,ut,n),a(ut,Ja),s(t,ce,n),s(t,ct,n),a(ct,Ma),s(t,fe,n),s(t,I,n),a(I,Na),a(I,Tt),a(Tt,Oa),a(I,qa),s(t,he,n),s(t,D,n),D.innerHTML=ls,s(t,de,n),s(t,X,n),a(X,Ha),a(X,G),a(G,Ra),s(t,me,n),s(t,ft,n),a(ft,Wa),s(t,ke,n),s(t,ht,n),a(ht,Ba),s(t,ve,n),s(t,dt,n),a(dt,L),a(L,Da),a(L,At),a(At,Xa),a(L,Ga),s(t,be,n),s(t,mt,n),a(mt,U),a(U,La),s(t,we,n),s(t,K,n),s(t,ye,n),s(t,kt,n),a(kt,Ua),s(t,ge,n),s(t,vt,n),a(vt,Ka),s(t,_e,n),s(t,F,n),a(F,Fa),a(F,Q),a(Q,Qa),s(t,Ee,n),s(t,bt,n),a(bt,Ya),s(t,Ie,n),s(t,wt,n),a(wt,Za)},p:sn,i:sn,o:sn,d(t){t&&e(v),t&&e(Jt),t&&e(Y),t&&e(Mt),t&&e(P),t&&e(Nt),t&&e(Z),t&&e(Ot),t&&e(b),t&&e(qt),t&&e(w),t&&e(Ht),t&&e(V),t&&e(Rt),t&&e($),t&&e(Wt),t&&e(h),t&&e(Bt),t&&e(tt),t&&e(Dt),t&&e(d),t&&e(Xt),t&&e(y),t&&e(Gt),t&&e(T),t&&e(Lt),t&&e(et),t&&e(Ut),t&&e(at),t&&e(Kt),t&&e(nt),t&&e(Ft),t&&e(g),t&&e(Qt),t&&e(J),t&&e(Yt),t&&e(st),t&&e(Zt),t&&e(ot),t&&e(Vt),t&&e(m),t&&e($t),t&&e(N),t&&e(te),t&&e(lt),t&&e(ee),t&&e(O),t&&e(ae),t&&e(pt),t&&e(ne),t&&e(it),t&&e(se),t&&e(H),t&&e(oe),t&&e(rt),t&&e(le),t&&e(R),t&&e(pe),t&&e(_),t&&e(ie),t&&e(E),t&&e(re),t&&e(W),t&&e(ue),t&&e(ut),t&&e(ce),t&&e(ct),t&&e(fe),t&&e(I),t&&e(he),t&&e(D),t&&e(de),t&&e(X),t&&e(me),t&&e(ft),t&&e(ke),t&&e(ht),t&&e(ve),t&&e(dt),t&&e(be),t&&e(mt),t&&e(we),t&&e(K),t&&e(ye),t&&e(kt),t&&e(ge),t&&e(vt),t&&e(_e),t&&e(F),t&&e(Ee),t&&e(bt),t&&e(Ie),t&&e(wt)}}}const ms={title:'Creating a "Swipe-to-Confirm" Component',description:`The Amazon app features a Slide-to-Confirm element inspired by Apple's "Swipe to Unlock". Surprisingly, a similar component is nowhere on the internet, so I'll need to create it myself.`,date:"2019-11-05",published:!0,oldslugthing:"/creating-a-swipe-to-confirm-component",cover:"https://www.arjunkalburgi.com/writing/assets/static/final.8e3a09a.6e883588bad609a43065f7294e5e56ab.gif"};class ks extends us{constructor(v){super();cs(this,v,null,hs,fs,{})}}export{ks as default,ms as metadata};
